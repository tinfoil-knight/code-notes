{"componentChunkName":"component---node-modules-gatsby-theme-code-notes-src-templates-note-js","path":"/go/lets-go/","result":{"data":{"mdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Tips from Let's Go\",\n  \"tags\": [\"go\", \"backend\", \"book\"],\n  \"link\": \"https://lets-go.alexedwards.net\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Don't use \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"http.DefaultServeMux\"), \" in production as it's a global variable which can be accessed by any third party package. Instead create a locally scoped servemux like this:\", mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-go\"\n  }, \"mux := http.NewServeMux()\\nmux.HandleFunc(\\\"/\\\", home)\\nerr := http.ListenAndServe(\\\":4000\\\", mux)\\nlog.Printf(err)\\n\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Longer URLs take precedence over smaller one's in Go's servemux. This means routes can be registered in any order.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"http.Error()\"), \" is a utility that calls \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"w.WriteHeader()\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"w.Write()\"), \". For example: \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"http.Error(w, \\\"Method Not Allowed\\\", 405)\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Always set header through \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"w.Header().Set(\\\"Content-Type\\\", \\\"application/json\\\")\"), \" to prevent JSON from being sent back as plaintext.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Remember to sanitize file path using \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"filepath.Clean()\"), \" when using \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"http.ServeFile()\"), \" to prevent directory traversal attacks.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Concurrency makes things fast but exposes shared resources to race conditions. These are solved using mutexes.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Cmd line flags can be used for configuration using the \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"flag\"), \" functionality. They have default values for fallback. (Not available when using environment variables)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"http.StatusText()\"), \" returns a human-readable string from HTTP Codes.\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"Tips from Let's Go","tags":["go","backend","book"],"emoji":null,"link":"https://lets-go.alexedwards.net"},"fields":{"slug":"/go/lets-go/"},"tableOfContents":{},"parent":{"__typename":"File","relativePath":"go/lets-go.md"}}},"pageContext":{"id":"78d64427-1578-5f87-ab73-7180329ce43c","previous":{"id":"ad99ff1e-fb22-56bc-8d3b-43a66bd60a7a","frontmatter":{"title":"The Go Programming Language","tags":["go","book"]},"fields":{"slug":"/go/the-gopl/"}},"next":{"id":"c05908d1-5c71-5f8c-8c7c-4c6905994394","frontmatter":{"title":"Learn Go w/ Tests","tags":["go","book"]},"fields":{"slug":"/go/go-with-tests/"}},"hasUntagged":true,"basePath":"/"}},"staticQueryHashes":["1437003973","2744905544","3664657028","467212769","467212769"]}
{"componentChunkName":"component---node-modules-gatsby-theme-code-notes-src-templates-note-js","path":"/go/viper-yaml/","result":{"data":{"mdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Viper + YAML\",\n  \"tags\": [\"go\"],\n  \"link\": \"https://scene-si.org/2017/04/20/managing-configuration-with-viper\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Example YAML configuration\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-yaml\"\n  }, \"--- \\nCOLLECTION: contacts\\nDB: phonebook\\nMONGODB_URI: \\\"mongodb://localhost:27017\\\"\\nPORT: \\\"8080\\\"\\n\")), mdx(\"p\", null, \"Setting Config File\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-go\"\n  }, \"package config\\n\\nimport (\\n    \\\"log\\\"\\n\\n    \\\"github.com/spf13/viper\\\"\\n)\\n\\n// Get : Gets config variables from the file\\nfunc Get(key string) string {\\n    viper.SetConfigName(\\\"config\\\")\\n    viper.AddConfigPath(\\\".\\\")\\n    err := viper.ReadInConfig()\\n\\n    if err != nil {\\n        log.Fatalf(\\\"Error while reading config file %s\\\", err)\\n    }\\n    value, _ := viper.Get(key).(string)\\n    return value\\n}\\n\")), mdx(\"p\", null, \"Using Viper in Go\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-go\"\n  }, \"package main\\n\\nimport (\\n    \\\"fmt\\\"\\n    \\\"./config\\\"\\n)\\n\\nfunc main() {\\n    fmt.Println(config.Get('PORT'))\\n}\\n\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"Viper + YAML","tags":["go"],"emoji":null,"link":"https://scene-si.org/2017/04/20/managing-configuration-with-viper"},"fields":{"slug":"/go/viper-yaml/"},"tableOfContents":{},"parent":{"__typename":"File","relativePath":"go/viper-yaml.md"}}},"pageContext":{"id":"9a07b81b-7797-583d-a6c9-806832dd0515","previous":{"id":"c05908d1-5c71-5f8c-8c7c-4c6905994394","frontmatter":{"title":"Learn Go w/ Tests","tags":["go","book"]},"fields":{"slug":"/go/go-with-tests/"}},"next":{"id":"d47ccfe8-4240-5881-b6c8-806d9cbc513d","frontmatter":{"title":"Little Things in Go","tags":["go"]},"fields":{"slug":"/go/small-tips-go/"}},"hasUntagged":true,"basePath":"/"}},"staticQueryHashes":["1437003973","2744905544","3664657028","467212769","467212769"]}
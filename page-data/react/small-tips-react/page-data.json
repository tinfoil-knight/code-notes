{"componentChunkName":"component---node-modules-gatsby-theme-code-notes-src-templates-note-js","path":"/react/small-tips-react/","result":{"data":{"mdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Little Things in React\",\n  \"tags\": [\"frontend\", \"react\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"If hot-reloading stops working, \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"rm -rf node_modules\"), \" and check again.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"While using \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"react-router\"), \", remember that the order of paths matter. So put \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"\\\\\"), \" at last and similarly put less specific things later than more specific ones.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Use a cleanup effect while data fetching through \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"useEffect\"), \" to avoid memory leaks which might not show up in errors. Ref: \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://juliangaramendy.dev/use-promise-subscription/\"\n  }, \"Cancelling a Promise w/ React.useEffect\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Data Fetching in React:\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"//  hooks.js\\nimport { useState, useEffect } from \\\"react\\\";\\nimport adminService from \\\"./adminService\\\";\\n\\n export const useAsync = (url, reqBody) => {\\n  const [data, setData] = useState(null);\\n  const hook = () => {\\n    let isSubscribed = true; // Prevents data fetching on unmounted components\\n    const fetchData = async () => {\\n      const resBody = await adminService.getData(url, reqBody);\\n      setData(resBody);\\n    };\\n    fetchData();\\n    return () => (isSubscribed = false);\\n  };\\n  useEffect(hook, [reqBody]);\\n  return [data];\\n};\\n\\n// adminService.js\\nimport axios from \\\"axios\\\";\\n\\nasync function getData(url, data) {\\n  console.log(url);\\n  try {\\n    const res = await axios.post(url, data);\\n    console.log(res);\\n    if (res.status === 200) {\\n      return res.data.statusCode === 200 ? res.data.results : null;\\n    }\\n    return null;\\n  } catch (error) {\\n    console.log(error);\\n  }\\n}\\n\\nexport default {\\n  getData,\\n};\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"Little Things in React","tags":["frontend","react"],"emoji":null,"link":null},"fields":{"slug":"/react/small-tips-react/"},"tableOfContents":{},"parent":{"__typename":"File","relativePath":"react/small-tips-react.md"}}},"pageContext":{"id":"562a6b20-3ea7-5a9b-b371-74c00cfa9782","previous":{"id":"a24f530b-0870-5f9a-b459-a37a8a437de7","frontmatter":{"title":"Tips on Charts","tags":["dataviz"]},"fields":{"slug":"/charts/"}},"next":null,"hasUntagged":true,"basePath":"/"}},"staticQueryHashes":["1437003973","2744905544","3664657028","467212769","467212769"]}
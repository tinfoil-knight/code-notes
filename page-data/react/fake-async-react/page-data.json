{"componentChunkName":"component---node-modules-gatsby-theme-code-notes-src-templates-note-js","path":"/react/fake-async-react/","result":{"data":{"mdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Simulate async API fetching in React\",\n  \"tags\": [\"react\"],\n  \"link\": \"https://www.roadtoreact.com/\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"const initialStories = [ ... ];\\n\\nconst getAsyncStories = () =>\\n    new Promise(resolve =>\\n        setTimeout(\\n        () => resolve({ data: { stories: initialStories } }),\\n        2000\\n    )\\n);\\n\\nconst [stories, setStories] = React.useState([]);\\nReact.useEffect(() => {\\n    getAsyncStories().then(result => {\\n        setStories(result.data.stories);\\n    });\\n}, []);\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"Simulate async API fetching in React","tags":["react"],"emoji":null,"link":"https://www.roadtoreact.com/"},"fields":{"slug":"/react/fake-async-react/"},"tableOfContents":{},"parent":{"__typename":"File","relativePath":"react/fake-async-react.md"}}},"pageContext":{"id":"72a4afef-3d26-5797-be69-eec63794788d","previous":{"id":"d92758bc-c9d3-5074-9f7e-11005150eda0","frontmatter":{"title":"Tips from The Linux CMD Line","tags":null},"fields":{"slug":"/the-linux-cmd/"}},"next":{"id":"79bc8b05-a816-549a-b04a-9e4908dce62e","frontmatter":{"title":"Latex 101","tags":null},"fields":{"slug":"/latex101/"}},"hasUntagged":true,"basePath":"/"}},"staticQueryHashes":["1437003973","2744905544","3664657028","467212769","467212769"]}